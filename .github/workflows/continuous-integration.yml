name: Continuous integration
concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true
on:
  workflow_call:
  pull_request:
    paths:
      - '**.js'
      - '**.cs'
      - '**.json'
      - '**.ts'
      - '**.vue'
      - '**.css'
      - '**.yaml'
      - '**.yml'

jobs:

  build-frontend:
    name: Build frontend
    runs-on: ubuntu-20.04
    defaults:
      run:
        working-directory: .
    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v2
        with:
          version: 8
      - uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: 'pnpm'
          cache-dependency-path: |
             frontend/pnpm-lock.yaml
             slidev/pnpm-lock.yaml
      - name: Install modules
        run: pnpm --prefix ./frontend install && pnpm --prefix ./slidev install
      - name: Build
        run: pnpm --prefix ./frontend run build && pnpm --prefix ./slidev run build-explainers

#  lint-frontend:
#    name: Lint and format frontend
#    runs-on: ubuntu-20.04
#    needs: [ build-frontend ]
#    defaults:
#      run:
#        working-directory: Epsilon.Host.Frontend
#    steps:
#      - uses: actions/checkout@v4
#      - uses: pnpm/action-setup@v2
#        with:
#          version: 8
#      - uses: actions/setup-node@v4
#        with:
#          node-version: 18
#          cache: 'pnpm'
#          cache-dependency-path: 'Epsilon.Host.Frontend/pnpm-lock.yaml'
#      - name: Install modules
#        run: pnpm install
#      - name: Perform linter
#        run: pnpm run lint
#      - name: Perform code formatter
#        run: pnpm run format-code

  code-analysis:
    name: Code analysis
    needs: [ build-frontend ]
    runs-on: ${{ (matrix.language == 'swift' && 'macos-latest') || 'ubuntu-latest' }}
    timeout-minutes: ${{ (matrix.language == 'swift' && 120) || 360 }}
    permissions:
      actions: read
      contents: read
      security-events: write
    strategy:
      fail-fast: false
      matrix:
        language: [ javascript-typescript' ]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: ${{ matrix.language }}
      - name: Autobuild
        uses: github/codeql-action/autobuild@v3
      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3
        with:
          category: "/language:${{matrix.language}}"